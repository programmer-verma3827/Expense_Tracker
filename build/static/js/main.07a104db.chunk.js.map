{"version":3,"sources":["modules/home/OverviewComponent.js","modules/home/TransactionComponent.js","modules/home/index.js","App.js","index.js"],"names":["Container","styled","div","ExpenseContainer","ExpenseBox","props","isIncome","BalanceBox","AddTransaction","AddTransactionContainer","isAddTxnVisible","RadioBox","AddTransactionView","useState","amount","setAmount","desc","setDesc","type","setType","placeholder","value","onChange","e","target","id","name","checked","htmlFor","onClick","addTransaction","Date","now","Number","OverViewComponent","toggleAddTXn","income","expense","isVisible","payload","Cell","isExpense","TransactionCell","TransactionsComponent","searchText","updateSearchText","transactions","filteredTransaction","updateTxn","filterData","trim","length","txn","filter","toLowerCase","includes","useEffect","map","HomeComponent","updateTransaction","updateExpense","updateIncome","exp","inc","calculateBalance","transactionArray","push","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a104db.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  width: 100%;\r\n`;\r\nconst ExpenseContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 12px;\r\n  margin: 20px;\r\n`;\r\nconst ExpenseBox = styled.div`\r\n  border-radius: 4px;\r\n  border: 1px solid #e6e8e9;\r\n  padding: 15px 20px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 135px;\r\n  & span {\r\n    color: ${(props) => (props.isIncome ? \"green\" : \"red\")};\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst BalanceBox = styled.div`\r\n  font-size: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  font-weight: bold;\r\n  & span {\r\n    color: #0d1d2c;\r\n    opacity: 80%;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst AddTransaction = styled.div`\r\n  font-size: 15px;\r\n  background: #0d1d2c;\r\n  display: flex;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  flex-direction: row;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n`;\r\nconst AddTransactionContainer = styled.div`\r\n  font-size: 15px;\r\n  display: ${(props) => (props.isAddTxnVisible ? \"flex\" : \"none\")};\r\n  color: #0d1d2c;\r\n  flex-direction: column;\r\n  border-radius: 4px;\r\n  border: 1px solid #e6e8e9;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  margin: 10px 20px;\r\n  gap: 10px;\r\n  & input {\r\n    width: 90%;\r\n    outline: none;\r\n    padding: 10px 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e6e8e9;\r\n  }\r\n`;\r\nconst RadioBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n  & input {\r\n    width: unset;\r\n    margin: 0 10px;\r\n  }\r\n`;\r\nconst AddTransactionView = (props) => {\r\n  const [amount, setAmount] = useState();\r\n  const [desc, setDesc] = useState();\r\n  const [type, setType] = useState(\"EXPENSE\");\r\n\r\n  return (\r\n    <AddTransactionContainer isAddTxnVisible={props.isAddTxnVisible}>\r\n      <input\r\n        placeholder=\"Amount\"\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Description\"\r\n        value={desc}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n      />\r\n      <RadioBox>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"expense\"\r\n          name=\"type\"\r\n          value=\"EXPENSE\"\r\n          checked={type === \"EXPENSE\"}\r\n          onChange={(e) => setType(e.target.value)}\r\n        />\r\n        <label htmlFor=\"expense\">Expense</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"income\"\r\n          name=\"type\"\r\n          value=\"INCOME\"\r\n          checked={type === \"INCOME\"}\r\n          onChange={(e) => setType(e.target.value)}\r\n        />\r\n        <label htmlFor=\"Expense\">Income</label>\r\n      </RadioBox>\r\n\r\n      <AddTransaction\r\n        onClick={() =>\r\n          props.addTransaction({\r\n            id: Date.now(),\r\n            amount: Number(amount),\r\n            desc,\r\n            type,\r\n          })\r\n        }\r\n      >\r\n        Add Transaction\r\n      </AddTransaction>\r\n    </AddTransactionContainer>\r\n  );\r\n};\r\nconst OverViewComponent = (props) => {\r\n  const [isAddTxnVisible, toggleAddTXn] = useState(false);\r\n  return (\r\n    <Container>\r\n      <BalanceBox>\r\n        Balance: Rs {props.income - props.expense}\r\n        <AddTransaction onClick={() => toggleAddTXn((isVisible) => !isVisible)}>\r\n          {isAddTxnVisible ? \"CANCEL\" : \"ADD\"}\r\n        </AddTransaction>\r\n      </BalanceBox>\r\n      {isAddTxnVisible && (\r\n        <AddTransactionView\r\n          isAddTxnVisible={isAddTxnVisible}\r\n          addTransaction={(payload) => {\r\n            props.addTransaction(payload);\r\n            toggleAddTXn((isVisible) => !isVisible);\r\n          }}\r\n        />\r\n      )}\r\n      <ExpenseContainer>\r\n        <ExpenseBox>\r\n          Expense<span>Rs {props.expense}</span>\r\n        </ExpenseBox>\r\n        <ExpenseBox isIncome={true}>\r\n          Income<span>Rs {props.income}</span>\r\n        </ExpenseBox>\r\n      </ExpenseContainer>\r\n    </Container>\r\n  );\r\n};\r\nexport default OverViewComponent;","import styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  background-color: white;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 22px;\r\n  font-size: 18px;\r\n  width: 100%;\r\n  gap: 10px;\r\n  font-weight: bold;\r\n  overflow-y: auto !important;\r\n  & input {\r\n    padding: 10px 12px;\r\n    border-radius: 12px;\r\n    background: #e6e8e9;\r\n    border: 1px solid #e6e8e9;\r\n    outline: none;\r\n  }\r\n`;\r\nconst Cell = styled.div`\r\n  background-color: white;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 15px;\r\n  font-size: 14px;\r\n  border-radius: 2px;\r\n  border: 1px solid #e6e8e9;\r\n  align-items: center;\r\n  font-weight: normal;\r\n  justify-content: space-between;\r\n  border-right: 4px solid ${(props) => (props.isExpense ? \"red\" : \"green\")};\r\n`;\r\nconst TransactionCell = (props) => {\r\n  return (\r\n    <Cell isExpense={props.payload?.type === \"EXPENSE\"}>\r\n      <span>{props.payload?.desc}</span>\r\n      <span>Rs {props.payload?.amount}</span>\r\n    </Cell>\r\n  );\r\n};\r\nconst TransactionsComponent = (props) => {\r\n  const [searchText, updateSearchText] = useState(\"\");\r\n  const [filteredTransaction, updateTxn] = useState(props.transactions);\r\n\r\n  const filterData = (searchText) => {\r\n    if (!searchText || !searchText.trim().length) {\r\n      updateTxn(props.transactions);\r\n      return;\r\n    }\r\n    let txn = [...props.transactions];\r\n    txn = txn.filter((payload) =>\r\n      payload.desc.toLowerCase().includes(searchText.toLowerCase().trim()),\r\n    );\r\n    updateTxn(txn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterData(searchText);\r\n  }, [props.transactions]);\r\n\r\n  return (\r\n    <Container>\r\n      Transactions\r\n      <input\r\n        placeholder=\"Search\"\r\n        onChange={(e) => {\r\n          updateSearchText(e.target.value);\r\n          filterData(e.target.value);\r\n        }}\r\n      />\r\n      {filteredTransaction?.map((payload) => (\r\n        <TransactionCell payload={payload} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\nexport default TransactionsComponent;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OverViewComponent from \"./OverviewComponent\";\r\nimport TransactionsComponent from \"./TransactionComponent\";\r\n\r\nconst Container = styled.div`\r\n  background-color: white;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 22px;\r\n  font-size: 18px;\r\n  width: 360px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HomeComponent = (props) => {\r\n    const [transactions, updateTransaction] = useState([]);\r\n    const [expense, updateExpense] = useState(0);\r\n    const [income, updateIncome] = useState(0);\r\n\r\n    const calculateBalance = () => {\r\n        let exp = 0;\r\n        let inc = 0;\r\n        transactions.map((payload) =>\r\n            payload.type === \"EXPENSE\"\r\n                ? (exp = exp + payload.amount)\r\n                : (inc = inc + payload.amount),\r\n        );\r\n        updateExpense(exp);\r\n        updateIncome(inc);\r\n    };\r\n    useEffect(() => calculateBalance(), [transactions]);\r\n\r\n    const addTransaction = (payload) => {\r\n        const transactionArray = [...transactions];\r\n        transactionArray.push(payload);\r\n        updateTransaction(transactionArray);\r\n    };\r\n    return (\r\n        <Container>\r\n            <OverViewComponent\r\n                expense={expense}\r\n                income={income}\r\n                addTransaction={addTransaction}\r\n            />\r\n            {transactions?.length ? (\r\n                <TransactionsComponent transactions={transactions} />\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\nexport default HomeComponent;","import React from \"react\";\nimport styled from \"styled-components\";\nimport HomeComponent from \"./modules/home\"\n\nconst Container = styled.div`\nbackground-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  margin: 0 10px;\n  align-items: center;\n  height: 100vh;\n  width: 98%;\n  padding-top: 30px ;\n  font-family: Montserrat;\n`;\n\nconst Header = styled.div`\nbackground-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 22px;\n  font-size: 25px;\n  font-weight: bold;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <Header>Expense Tracker</Header>\n      <HomeComponent />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}